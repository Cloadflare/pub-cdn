
     // Function to remove 'display: none;' from inline styles and override computed styles
 (function removeDisplayNoneFromElements() {
 	// Get all elements on the page
 	var elements = document.getElementsByTagName("*");

 	// Loop through each element
 	for (var i = 0; i < elements.length; i++) {
 		var el = elements[i];

 		// Get the computed style of the element
 		var computedStyle = window.getComputedStyle(el);

 		// If the element is hidden (display is 'none')
 		if (computedStyle.display === 'none') {
 			// Remove inline 'display' style if it's set to 'none'
 			if (el.style.display === 'none') {
 				el.style.removeProperty('display');
 			}

 			// Get the default display value for this element type
 			var defaultDisplay = getDefaultDisplay(el.nodeName);

 			// Set the element's display style to its default value
 			el.style.display = defaultDisplay;
 		}
 	}

 	// Function to get the default display value of an element
 	function getDefaultDisplay(tag) {
 		// Create a temporary element in the DOM
 		var temp = document.createElement(tag);
 		document.body.appendChild(temp);

 		// Get the computed display style of the temporary element
 		var display = window.getComputedStyle(temp).display;

 		// Remove the temporary element from the DOM
 		document.body.removeChild(temp);

 		// Return the default display value
 		return display;
 	}
 })();

 // Function to remove 'display: none;' from stylesheets
 (function removeDisplayNoneFromStylesheets() {
 	// Loop through all stylesheets
 	for (var s = 0; s < document.styleSheets.length; s++) {
 		var sheet = document.styleSheets[s];

 		// Some stylesheets may not be accessible due to CORS restrictions
 		try {
 			var rules = sheet.cssRules || sheet.rules;
 			if (!rules) continue;

 			// Loop through all rules in the stylesheet
 			for (var r = 0; r < rules.length; r++) {
 				var rule = rules[r];

 				// If the rule is a style rule (e.g., not @import)
 				if (rule.type === CSSRule.STYLE_RULE && rule.style && rule.style.display === 'none') {
 					// Remove the 'display' property
 					rule.style.removeProperty('display');
 				}

 				// If the rule contains nested rules (e.g., @media queries)
 				else if (rule.cssRules) {
 					for (var nr = 0; nr < rule.cssRules.length; nr++) {
 						var nestedRule = rule.cssRules[nr];
 						if (nestedRule.type === CSSRule.STYLE_RULE && nestedRule.style.display === 'none') {
 							nestedRule.style.removeProperty('display');
 						}
 					}
 				}
 			}
 		} catch (e) {
 			// Ignore stylesheets that cannot be accessed
 			console.warn('Cannot access stylesheet:', sheet.href, e);
 		}
 	}
 })();


 function selectRandomOptionForAllSelects() {
 	try {
 		// Get all select elements in the document
 		var selects = document.getElementsByTagName('select');

 		// Loop through each select element
 		for (var s = 0; s < selects.length; s++) {
 			var select = selects[s];

 			// Get all options of the current select element
 			var options = select.options;

 			// Array to store indices of selectable options
 			var selectableIndices = [];

 			// Loop through options to find selectable ones
 			for (var i = 0; i < options.length; i++) {
 				// Option should not be disabled, should have a value, and should not be currently selected
 				if (!options[i].disabled && options[i].value !== "" && i !== select.selectedIndex) {
 					selectableIndices.push(i);
 				}
 			}

 			// Check if there are selectable options available
 			if (selectableIndices.length > 0) {
 				// Generate a random index from selectable options
 				var randomIndex = selectableIndices[Math.floor(Math.random() * selectableIndices.length)];

 				// Set the selected index of the select element
 				select.selectedIndex = randomIndex;
 			} else {
 				// No other selectable options available
 				console.log('No selectable options available for select element with ID: ' + select.id);
 			}
 		}
 	} catch (error) {}

 }

 selectRandomOptionForAllSelects();


 function randomlySelectRadioButtons() {

 	try {
 		// Step 1: Select all radio buttons
 		const radioButtons = document.querySelectorAll('input[type="radio"]');

 		// Step 2: Group radio buttons by their name attribute
 		const radioGroups = {};

 		// Grouping radio buttons by name
 		radioButtons.forEach(radio => {
 			const name = radio.name;
 			if (!radioGroups[name]) {
 				radioGroups[name] = [];
 			}
 			radioGroups[name].push(radio);
 		});

 		// Step 3: Randomly select one radio button from each group
 		for (const groupName in radioGroups) {
 			const group = radioGroups[groupName];
 			const randomIndex = Math.floor(Math.random() * group.length);
 			group[randomIndex].checked = true; // Randomly check one radio button in the group
 			group[randomIndex].click()
 		}
 	} catch (error) {

 	}

 }

 randomlySelectRadioButtons();
 
 
 function randomlySelectCheckbox() {

	try {
		// Step 1: Select all checkboxes
		const checkboxes = document.querySelectorAll('input[type="checkbox"]');

		// Check if there are any checkboxes available
		if (checkboxes.length === 0) {
			return;
		}

		// Step 2: Randomly select one checkbox
		const randomIndex = Math.floor(Math.random() * checkboxes.length);
		const randomCheckbox = checkboxes[randomIndex];

		// Toggle the checked state of the randomly selected checkbox
		randomCheckbox.checked = !randomCheckbox.checked;
	} catch (error) {}

}

// Call the function to execute the logic
randomlySelectCheckbox();
    
    function generateRandomName() {
  	var firstNames = [
  		"علی",
  		"رضا",
  		"محمد",
  		"حسین",
  		"مهدی",
  		"حسن",
  		"احمد",
  		"مجید",
  		"فرهاد",
  		"فریبرز",
  		"بهرام",
  		"کاوه",
  		"داریوش",
  		"کوروش",
  		"آرش",
  		"بابک",
  		"سروش",
  		"مرتضی",
  		"مصطفی",
  		"حامد",
  		"کامران",
  		"آرمان",
  		"امیر",
  		"سعید",
  		"پیمان",
  		"بهزاد",
  		"بهنام",
  		"شهرام",
  		"فرشاد",
  		"فرشید",
  		"حمید",
  		"نیما",
  		"میلاد",
  		"نوید",
  		"کیوان",
  		"نادر",
  		"سام",
  		"سینا",
  		"سهیل",
  		"کیان",
  		"آرمین",
  		"شروین",
  		"پارسا",
  		"پویا",
  		"هومن",
  		"پویان",
  		"رامین",
  		"کامبیز",
  		"کسری",
  		"شهاب",
  		"خشایار",
  		"بهرنگ",
  		"فربد",
  		"فرزاد",
  		"مازیار",
  		"ناصر",
  		"صادق",
  		"یاسر",
  		"یونس",
  		"یوسف",
  		"امید",
  		"احسان",
  		"ابراهیم",
  		"اسماعیل",
  		"هارون",
  		"مسعود",
  		"محمود",
  		"جمشید",
  		"جواد",
  		"جلال",
  		"بهمن",
  		"بهادر",
  		"بهروز",
  		"بیژن",
  		"پرویز",
  		"پیروز",
  		"کیخسرو",
  		"منوچهر",
  		"اردشیر",
  		"افشین",
  		"اشکان",
  		"برزو",
  		"اسفندیار",
  		"ارسلان",
  		"فرید",
  		"فرخ",
  		"فریدون",
  		"فرامرز",
  		"غلام",
  		"حبیب",
  		"هادی",
  		"مهرداد",
  		"کمال",
  		"کریم",
  		"خسرو",
  		"رشید",
  		"نوشیروان",
  		"شاهین",
  		"امیرحسین",
  		"امیرعلی",
  		"فرشاد",
  		"شهاب",
  		"نوید",
  		"سلمان",
  		"رضا",
  		"آزاده",
  		"فاطمه",
  		"زهرا",
  		"مریم",
  		"سارا",
  		"نازنین",
  		"ندا",
  		"مینا",
  		"مونا",
  		"شیما",
  		"شیرین",
  		"ساناز",
  		"پریسا",
  		"مهسا",
  		"سحر",
  		"لیلا",
  		"نفیسه",
  		"سهیلا",
  		"فرزانه",
  		"آزاده",
  		"مرجان",
  		"سپیده",
  		"ستاره",
  		"ناهید",
  		"فرشته",
  		"گلی",
  		"الهام",
  		"الهه",
  		"نگار",
  		"هما",
  		"نسرین",
  		"مهشید",
  		"لادن",
  		"ویدا",
  		"یاسمن",
  		"پروانه",
  		"غزل",
  		"رعنا",
  		"رویا",
  		"مژگان",
  		"ماندانا",
  		"گلناز",
  		"ترانه",
  		"نیلوفر",
  		"بیتا",
  		"کتایون",
  		"روشناک",
  		"پردیس",
  		"هستی",
  		"حدیث",
  		"حدیثه",
  		"حکیمه",
  		"حلما",
  		"حمیرا",
  		"خاطره",
  		"درنا",
  		"دنیا",
  		"دریا",
  		"روشنک",
  		"رویا",
  		"رومینا",
  		"رها",
  		"ریحانه",
  		"زارا",
  		"زهره",
  		"زیبا",
  		"ژاله",
  		"سپیده",
  		"ساناز",
  		"سلما",
  		"ساغر",
  		"سارا",
  		"سحر",
  		"سوسن",
  		"سیما",
  		"شادی",
  		"شبنم",
  		"شیرین",
  		"شیوا",
  		"صبا",
  		"طناز",
  		"فرزانه",
  		"فرشته",
  		"فرناز",
  		"فریبا",
  		"فریده",
  		"کتایون",
  		"مارال",
  		"ماندانا",
  		"مبینا",
  		"مرجان",
  		"مریم",
  		"ملیکا",
  		"مینا",
  		"نازگل",
  		"نازنین",
  		"نرگس",
  		"نگار",
  		"نیکی",
  		"نیلوفر",
  		"نسرین",
  		"نفیسه",
  		"نگین",
  		"هانیه",
  		"هدیه",
  		"هستی",
  		"هلیا",
  		"هما",
  		"ویدا",
  		"ورونیکا",
  		"پریا",
  		"پری",
  		"پریماه",
  		"پریوش",
  		"ترلان",
  		"تیسا",
  		"النا",
  		"الناز",
  		"الهام",
  		"افسانه",
  		"ارمغان",
  		"آرمیتا",
  		"آتنا",
  		"آیدا",
  		"آریانا",
  		"آیلار",
  		"آزیتا",
  		"آرزو",
  		"آساره",
  		"آناهیتا",
  		"لیلا",
  		"میترا",
  		"معصومه",
  		"مهتاب",
  		"ماهناز",
  		"مهناز",
  		"مهرنوش",
  		"مونا",
  		"مهسا",
  		"مینو",
  		"مهشاد",
  		"مژگان",
  		"ارغوان",
  		"افروز",
  		"اکرم",
  		"انیس",
  		"انوشه",
  		"پرستو",
  		"پگاه",
  		"پانته‌آ",
  		"پروانه",
  		"پرنیا",
  		"پریسا",
  		"پونه",
  		"پریوش",
  		"آنیسا",
  		"آوا",
  		"ترنم",
  		"مانیا",
  		"پرنیان",
  		"صدف",
  		"یلدا",
  		"آنا",
  		"ترمه",
  		"مانلی",
  		"نازنین زهرا",
  		"نازلی",
  		"نسترن",
  		"نیکی",
  		"نیوشا",
  		"سودابه",
  		"سیمین",
  		"شکیبا",
  		"شقایق",
  		"شکوفه",
  		"شکوه",
  		"شیلا",
  		"طلا",
  		"عطیه",
  		"غزاله",
  		"فریناز",
  		"فرنوش",
  		"فیروزه",
  		"گلاره",
  		"گلبرگ",
  		"گلنار",
  		"گلناز",
  		"گلسا",
  		"گلشن",
  		"گیتا",
  		"محدثه",
  		"مهدیس",
  		"مهستی",
  		"مهکامه",
  		"مهرآنا",
  		"مهرانه",
  		"مهکامه",
  		"مهرسا",
  		"مهرسیما",
  		"مینا",
  		"نسرین",
  		"نغمه",
  		"نگین",
  		"ندا",
  		"نوا",
  		"نوشین",
  		"نیکی",
  		"نیلو",
  		"نیکو",
  		"نیلا",
  		"یلدا",
  		"یحیی",
  		"یاشار",
  		"یگانه",
  		"یاسمن",
  		"آذین",
  		"آریان",
  		"آرمین",
  		"آراد",
  		"آرین",
  		"آرتین",
  		"آریا",
  		"آدرین",
  		"آرتام",
  		"آرمیا",
  		"آوید",
  		"آروند",
  		"اشکان",
  		"الوند",
  		"آریو",
  		"امیررضا",
  		"امیرمحمد",
  		"امیرعباس",
  		"بهداد",
  		"رهام",
  		"رادان",
  		"نیما",
  		"هیراد",
  		"رامتین",
  		"راستین",
  		"سپهر",
  		"سورنا",
  		"سامیار",
  		"سامان",
  		"سامی",
  		"سهند",
  		"سامد",
  		"سهراب",
  		"سوگند",
  		"شایان",
  		"شهریار",
  		"شروین",
  		"شاهرخ",
  		"فرزام",
  		"فرشید",
  		"فرهود",
  		"فراز",
  		"فرامرز",
  		"کسری",
  		"کیارش",
  		"کیوان",
  		"کیهان",
  		"کیانوش",
  		"کیاوش",
  		"کیخسرو",
  		"ماهان",
  		"مانی",
  		"میلاد",
  		"مهیار",
  		"مهرداد",
  		"مهراس",
  		"مهشاد",
  		"نیما",
  		"نوید",
  		"نادر",
  		"رامبد",
  		"روزبه",
  		"اشکان",
  		"اسماعیل",
  		"احسان",
  		"نوین",
  		"نوح",
  		"الهه",
  		"ایمان",
  		"بزرگمهر",
  		"پاشا",
  		"پرهام",
  		"پیمان",
  		"پرشان",
  		"پندار",
  		"باربد",
  		"بابا",
  		"بردیا",
  		"برنا",
  		"بکتاش",
  		"بیژن",
  		"بهداد",
  		"پارسا",
  		"پانیذ",
  		"پرهام",
  		"پیام",
  		"پیروز",
  		"تارا",
  		"توماج",
  		"تورج",
  		"تیرداد",
  		"جاوید",
  		"جمشید",
  		"جهانگیر",
  		"خشایار",
  		"خورشید",
  		"داریوش",
  		"دیاکو",
  		"راما",
  		"رهام",
  		"زاوه",
  		"شادن",
  		"شکوه",
  		"کیمیا",
  		"گلادیس",
  		"مهان",
  		"نیابد",
  		"وروژان",
  		"هخامنش",
  		"یوشا",
  		"آرنگ",
  		"آبتین",
  		"اروان",
  		"اشکان",
  		"ارژنگ",
  		"بامشاد",
  		"بهدین",
  		"تهمتن",
  		"تورج",
  		"تیرداد",
  		"چنگیز",
  		"حورا",
  		"خیراندیش",
  		"دیانا",
  		"رابو",
  		"رامش",
  		"رانیا",
  		"رکسانا",
  		"ژوبین",
  		"زرین",
  		"سودا",
  		"سیروس",
  		"شیرزاد",
  		"شیدخت",
  		"غوغا",
  		"فرهود",
  		"کتایون",
  		"کوشافر",
  		"گیو",
  		"لاچین",
  		"ماری",
  		"ملودی",
  		"منصور",
  		"مهیا",
  		"نیکتا",
  		"واهاب",
  		"ویهان",
  		"هیرمان",
  		"هوتن",
  		"وهب",
  		"پاکان",
  		"یاسان",
  		"یران",
  		"راشین",
  		"نوژن",
  		"هژیر",
  		"هومن",
  		"هوشنگ",
  		"یغما",
  		"یونا",
  		"یاشار",
  		"یوسف",
  		"یعقوب",
  		"الهه",
  		"الناز",
  		"النا",
  		"الینا",
  		"احمد",
  		"اکبر",
  		"اکرم",
  		"فهیمه",
  		"فاطمه",
  		"آتنا",
  		"آزیتا",
  		"آزاده",
  		"الیاس",
  		"آرزو",
  		"معین",
  		"منیره",
  		"جمیله",
  		"سکینه",
  		"طیبه",
  		"مرضیه",
  		"مصطفی",
  		"منصوره",
  		"کریم",
  		"شکرانه",
  		"کبری",
  		"گلنوش",
  		"گلاره",
  		"نصیبه",
  		"زبیده",
  		"نسرین",
  		"شهربانو",
  		"شهره",
  		"نینا",
  		"هما",
  		"شعله",
  		"راحله",
  		"زهرا",
  		"عفت",
  		"نیره",
  		"لیلا",
  		"شیدا",
  		"سپیده",
  		"شکوه",
  		"طلوع",
  		"مهوش",
  		"پری سیما",
  		"پروین",
  		"نگارین",
  		"پری ناز",
  		"سیمین",
  		"سیلدا",
  		"سونیا",
  		"شیما",
  		"سحرناز",
  		"شب بو",
  		"شقایق",
  		"سوگل",
  		"شاهدخت",
  		"سها",
  		"سودخت",
  		"سارا",
  		"شهرزاد",
  		"شهرناز",
  		"شهرآرا",
  		"شکوفه",
  		"شیدانه",
  		"شیرین دخت",
  		"فرنیا",
  		"فرین",
  		"فرخنده",
  		"فرناز",
  		"فرنگیس",
  		"فرینوش",
  		"فرزان",
  		"فرانک",
  		"فرزانه",
  		"فتانه",
  		"فریبا",
  		"فریده",
  		"فیروزه",
  		"گرد آفرید",
  		"گلچهره",
  		"گلمهر",
  		"گیتی",
  		"گیلدا",
  		"مارال",
  		"مرال",
  		"مستانه",
  		"مهبا",
  		"مهدیه",
  		"مهرسا",
  		"مهرانه",
  		"مهسا",
  		"مهتا",
  		"مهتاب",
  		"مهرافروز",
  		"ماه رخ",
  		"مژده",
  		"ماندانا",
  		"مانلی",
  		"مرجان",
  		"مریم",
  		"مینا",
  		"نازیلا",
  		"نسرین",
  		"نگین",
  		"نکیسا",
  		"نوا",
  		"نوران",
  		"نوشین",
  		"نیلوفر",
  		"نیکو",
  		"ویدا",
  		"هانیه",
  		"هدیه",
  		"هستی",
  		"الیکا",
  		"یلدا",
  		"یگانه"
  	];

  	var surnames = [
  		"احمدی",
  		"حسینی",
  		"محمدی",
  		"رضایی",
  		"حیدری",
  		"موسوی",
  		"جعفری",
  		"کریمی",
  		"نجفی",
  		"زارع",
  		"مرادی",
  		"صادقی",
  		"قاسمی",
  		"عابدی",
  		"عباسی",
  		"قاسمیان",
  		"نعمتی",
  		"سلیمانی",
  		"غفاری",
  		"افشاری",
  		"شریفی",
  		"نوروزی",
  		"دشتی",
  		"خادمی",
  		"جلالی",
  		"مهدوی",
  		"نوری",
  		"رضوانی",
  		"هاشمی",
  		"امیری",
  		"فتحی",
  		"شعبانی",
  		"کاظمی",
  		"کیانی",
  		"پورحسین",
  		"یزدانی",
  		"سعیدی",
  		"فلاحی",
  		"اسدی",
  		"امیرخانی",
  		"زاهدی",
  		"سلطانی",
  		"رسولی",
  		"طالبی",
  		"مستوفی",
  		"حسنی",
  		"حمیدی",
  		"باقری",
  		"رستمی",
  		"محمودی",
  		"حکیمی",
  		"عزیزی",
  		"اکبری",
  		"رجبی",
  		"سجادی",
  		"توکلی",
  		"آذری",
  		"غلامی",
  		"پیمانی",
  		"صابری",
  		"شاهی",
  		"کریمیان",
  		"ملکی",
  		"بهشتی",
  		"عظیمی",
  		"نیکنام",
  		"جعفرزاده",
  		"عاشوری",
  		"احمدیان",
  		"خسروی",
  		"صفری",
  		"اسماعیلی",
  		"مهدیان",
  		"رضاییان",
  		"رادمنش",
  		"خلیلی",
  		"نصیری",
  		"رنجبر",
  		"نوربخش",
  		"جعفریان",
  		"رحمانی",
  		"بیات",
  		"کریمان",
  		"صفایی",
  		"طاهری",
  		"شاکری",
  		"رنجبران",
  		"موسویان",
  		"امانی",
  		"عباسپور",
  		"صالحی",
  		"جهانگیری",
  		"شاملو",
  		"قربانی",
  		"خادم",
  		"ستاری",
  		"کلباسی",
  		"ناصری",
  		"شهیدی",
  		"نیازمند",
  		"فاضلی",
  		"صالحیان",
  		"صدیقی",
  		"عسگری",
  		"باقریان",
  		"خلیلیان",
  		"رئیسی",
  		"کرمی",
  		"محسنی",
  		"مظفری",
  		"جمالی",
  		"دانشی",
  		"دهقان",
  		"میرزایی",
  		"رستگار",
  		"کوهی",
  		"زند",
  		"نکوفر",
  		"حسنان",
  		"نیکوکار",
  		"حجازی",
  		"حسینیان",
  		"شمشیری",
  		"حاجیان",
  		"پیروزی",
  		"سلمانپور",
  		"معتمدی",
  		"صانعی",
  		"مجمری",
  		"پوربهرام",
  		"نیازی",
  		"اخلاقی",
  		"مفتح",
  		"منصوری",
  		"شکیبا",
  		"حمزه‌ای",
  		"واعظی",
  		"نقیبی",
  		"شجاعی",
  		"بابایی",
  		"شریف",
  		"پارسا",
  		"آقایی",
  		"صفادر",
  		"ثابتی",
  		"سهرابی",
  		"امجدی",
  		"تاجیک",
  		"غفوری",
  		"حیدریان",
  		"زنگنه",
  		"محسنیان",
  		"سامانی",
  		"میرحسینی",
  		"افشار",
  		"مزروعی",
  		"شکیبایی",
  		"فرهادی",
  		"اسحاقی",
  		"سعادت",
  		"شریعتمداری",
  		"قدیری",
  		"نامور",
  		"شاکری‌نیا",
  		"صنعتی",
  		"فرزانه",
  		"نصرتی",
  		"ظریفی",
  		"ندیمی",
  		"صفاییان",
  		"فتاحی",
  		"رادمهر",
  		"نصری",
  		"نوریان",
  		"فرخی",
  		"قدسی",
  		"هاشم‌زاده",
  		"آهنی",
  		"آذرباد",
  		"ارجمند",
  		"بهزادی",
  		"بابازاده",
  		"تیموری",
  		"بیگدلی",
  		"نوراللهی",
  		"علوی",
  		"اصفهانی",
  		"فتوحی",
  		"انصاری",
  		"زینالی",
  		"فتح‌اللهی",
  		"کلانتری",
  		"سجادیان",
  		"عالمی",
  		"رادپور",
  		"مقدم",
  		"نامی",
  		"قنبری",
  		"صنایع",
  		"عربی",
  		"احسانی",
  		"نصیب",
  		"جهانی",
  		"کیانیان",
  		"دانایی",
  		"برومند",
  		"میرطالبی",
  		"آریایی",
  		"یزدی",
  		"رستگاری",
  		"نظری",
  		"کاشانی",
  		"شکیباپور",
  		"فرمانیان",
  		"شریعتی",
  		"روحانی",
  		"حافظی",
  		"بیرانوند",
  		"متقی",
  		"عبداللهی",
  		"محمودیان",
  		"حلیمی",
  		"دلدار",
  		"اربابی",
  		"گلستانی",
  		"جلیل‌وند",
  		"ضیایی",
  		"زارع‌پور",
  		"کمالی",
  		"غلامیان",
  		"معینی",
  		"واثقی",
  		"پیامی",
  		"امامی",
  		"خراسانی",
  		"رمضانی",
  		"موسوی‌نیا",
  		"سادات",
  		"رادفر",
  		"یزدانیان",
  		"امیریان",
  		"سلطانیان",
  		"محمودی‌نیا",
  		"پناهی",
  		"صفاری",
  		"نجفقلی",
  		"بهرامی",
  		"ظفری",
  		"نوذری",
  		"میرزاده",
  		"زمانی",
  		"فیروزی",
  		"حقیقی",
  		"منوچهری",
  		"وفایی",
  		"سپهری",
  		"سامانیان",
  		"قنبریان",
  		"مهدیزاده",
  		"شهسواری",
  		"شکرالهی",
  		"بشیری",
  		"امیرخانیان",
  		"مکی",
  		"محمودیان‌فر",
  		"فدوی",
  		"جاویدی",
  		"کاکایی",
  		"معتضدی",
  		"شوقی",
  		"کمالیان",
  		"خوش‌رو",
  		"صمدی",
  		"فرحانی",
  		"پورمحمد",
  		"صابریان",
  		"حقانی",
  		"سازندگی",
  		"شفیعی",
  		"رسایی",
  		"خلیلی‌نژاد",
  		"محمدزاده",
  		"نقوی",
  		"مجیدی",
  		"جوانی",
  		"انگوتی",
  		"سازمند",
  		"صداقت",
  		"داداشی",
  		"نوبخت",
  		"موسویان‌فر",
  		"شرافتی",
  		"آریان",
  		"مولایی",
  		"حبیبی",
  		"یوسفی",
  		"کاملی",
  		"عرب",
  		"ناموران",
  		"شهریاری",
  		"مختاری",
  		"علیرضایی",
  		"غروی",
  		"شادی‌فر",
  		"ایمانی",
  		"نادری",
  		"حسینی‌نیا",
  		"معصومی",
  		"ثابتیان",
  		"حفظی",
  		"خضرایی",
  		"فقیهی",
  		"یاری",
  		"اکبری‌نیا",
  		"درویش",
  		"رئیسیان",
  		"ادیبی",
  		"مولاییان",
  		"سلیمی",
  		"مهدویان",
  		"مولوی",
  		"امیدی",
  		"کبیری",
  		"ریاحی",
  		"اصلانی",
  		"رحمانیان",
  		"ابراهیمی",
  		"اصغری",
  		"فرهادیان",
  		"قائدی",
  		"هاشم‌پور",
  		"فکوری",
  		"یعقوبی",
  		"قلی‌پور",
  		"قائم‌مقامی",
  		"میر",
  		"مصفا",
  		"ندیمیان",
  		"فراهانی",
  		"رحیم‌پور",
  		"امیدیان",
  		"نورانی",
  		"رضوانیان",
  		"مکتبی",
  		"اسعدی",
  		"مومن",
  		"الماسی",
  		"شهرابی",
  		"بهرنگی",
  		"افضلی",
  		"افضلیان",
  		"فراتی",
  		"فقیه",
  		"سرلک",
  		"مجتهدی",
  		"گویانی",
  		"جعفری‌نیا",
  		"شایسته",
  		"یاسمی",
  		"ساعدی",
  		"عطایی",
  		"طریقی",
  		"یزدان‌پرست",
  		"یوسفی‌نیا",
  		"گودرزی",
  		"خواجه‌پور",
  		"صدیقیان",
  		"مهربان",
  		"فرهنگ",
  		"حکمت",
  		"خادمیان",
  		"نوبختی",
  		"وجدانی",
  		"صمدیان",
  		"شجاع",
  		"زاهدیان",
  		"آخوندی",
  		"آگاهی",
  		"آزاد",
  		"آذرنیا",
  		"بابلی",
  		"بخشی",
  		"بنان",
  		"بیگلو",
  		"پورعلی",
  		"تاج‌بخش",
  		"تولایی",
  		"ثابتی‌فرد",
  		"جنتی",
  		"جهان",
  		"چاووشی",
  		"حاجی‌پور",
  		"خسروانی",
  		"دانشمند",
  		"رامشی",
  		"رحمتی",
  		"روستایی",
  		"روزبهانی",
  		"زشتی",
  		"سایه",
  		"سرمدی",
  		"سلطان‌پور",
  		"شریف‌زاده",
  		"طاووسی",
  		"عارفی",
  		"علی‌پور",
  		"غانمی",
  		"فتاح",
  		"قره‌باغی",
  		"قهرمانی",
  		"کاظمیان",
  		"کشاورز",
  		"گلبادی",
  		"لاریجانی",
  		"مداح",
  		"محجوب",
  		"مختارپور",
  		"محتشمی",
  		"مدنی",
  		"مرصادی",
  		"مصدق",
  		"مطهری",
  		"معادی",
  		"معافی",
  		"معیری",
  		"مقتدایی",
  		"مگوسی",
  		"ناصریان",
  		"نامورمطلق",
  		"نجات",
  		"نصرت‌پور",
  		"نفر",
  		"واثق",
  		"واعظ",
  		"وفا",
  		"وکیلی",
  		"هاشمیان",
  		"هدایتی",
  		"هوشمند",
  		"یزدان‌دوست",
  		"یوسفیان",
  		"ابطحی",
  		"الفت",
  		"براتی",
  		"بالیده",
  		"بدرخش",
  		"بیدقی",
  		"پوراسد",
  		"پارساپور",
  		"تیموریان",
  		"جلیلی",
  		"حاتمی",
  		"حیرانی",
  		"خراساني",
  		"دادگر",
  		"دشتیان",
  		"دیانی",
  		"رازقی",
  		"رادفر",
  		"رسول‌زاده",
  		"زامیاد",
  		"زارعی‌نیا",
  		"سفیدی",
  		"شرافت",
  		"شکری",
  		"شهنازی",
  		"شهبازی",
  		"عراقی",
  		"عقیلی",
  		"فرزین",
  		"قدیریان",
  		"کرباسی",
  		"مجرد",
  		"مدبر",
  		"معارف",
  		"منوچهریان",
  		"مهرآبادی",
  		"مهرانفر",
  		"محقق",
  		"مفتوحی",
  		"نادریان",
  		"نیک‌خو",
  		"هاشم‌خو",
  		"یعقوبیان",
  		"یونسی",
  		"زمانیان",
  		"زرین‌کوب",
  		"ساعی",
  		"سلامی",
  		"سوری",
  		"علویان",
  		"غریب",
  		"غضنفری",
  		"فروتن",
  		"فیضی",
  		"قاضی",
  		"کارگر",
  		"مدرس",
  		"محبی",
  		"میراث",
  		"نقویان",
  		"نیلفروشان",
  		"هاشمی‌نسب",
  		"واحدی",
  		"هداوند",
  		"واعظیان",
  		"مظاهری",
  		"زمانی‌نیا",
  		"صوفی",
  		"مقدم‌نیا",
  		"گلزار",
  		"منصوریان",
  		"خزایی",
  		"اسدیان",
  		"مبین",
  		"کردستانی",
  		"مسعودی"
  	];

  	var randomFirstName = firstNames[Math.floor(Math.random() * firstNames.length)];
  	var randomSurname = surnames[Math.floor(Math.random() * surnames.length)];
  	return randomFirstName + " " + randomSurname;

  }
  
  function generateRandomPhoneNumber() {
	// Function to generate a random number of a specified length
	function generateRandomNumber(length) {
		let result = '';
		const characters = '0123456789';
		for (let i = 0; i < length; i++) {
			result += characters.charAt(Math.floor(Math.random() * characters.length));
		}
		return result;
	}

	// Array of possible prefixes
	const prefixes = ["0912", "0936", "0938", "0905", "0916", "0919", "0913", "0910"];

	// Randomly select a prefix
	const prefixNumber = prefixes[Math.floor(Math.random() * prefixes.length)];

	// Generate a random phone number
	const rndPhoneNumber = `${prefixNumber}${generateRandomNumber(7)}`;

	return rndPhoneNumber;
}
    